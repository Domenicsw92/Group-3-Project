{"version":3,"sources":["utils/Constants.js","reducers/PhotosListReducer.js","reducers/UploadedPhotosReducer.js","utils/auth.js","utils/localStorage.js","utils/mutations.js","pages/Results.js","pages/SearchPhotos.js","utils/queries.js","pages/savedImage/img11.jpg","pages/savedImage/img12.jpg","pages/savedImage/img13.jpg","pages/savedImage/img14.jpg","pages/savedImage/img15.jpg","pages/savedImage/img16.jpg","pages/savedImage/img17.jpg","pages/savedImage/img18.jpg","pages/savedImage/img19.jpg","pages/Saved.js","pages/SavedPhotos.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","config/config.js","actions/index.js","utils/CloudinaryService.js","pages/profile/Photo.js","pages/profile/Header.js","pages/profile/avatar2.png","pages/profile/AvatarBio.js","pages/profile/PhotoList.js","pages/profile/UploadedPhotosStatus.js","pages/profile/PhotosUploader.js","pages/profile/profile.js","pages/home/street.jpg","pages/home/crowd.jpg","pages/home/field.jpg","pages/home/donkey.jpg","pages/home/home.js","components/footer.js","components/Payment.js","App.js","index.js"],"names":["PHOTOS_FETCHED","PHOTOS_UPLOADED","DELETE_UPLOADED_PHOTO","UPDATE_UPLOADED_PHOTO","PhotosListReducer","photos","action","type","filter","photo","public_id","publicId","UploadedPhotosReducer","uploadedPhotos","photoIndex","updatedPhotos","map","index","id","uploadedPhoto","findIndex","current","response","body","slice","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","removePhotoId","photoId","savedPhotoIds","JSON","parse","updatedSavedPhotoIds","savedPhotoId","stringify","LOGIN_USER","gql","ADD_USER","SAVE_PHOTO","REMOVE_PHOTO","Results","SearchPhotos","useState","searchResult","setResult","setPhoto","clientId","setSavedPhotoIds","useMutation","savePhoto","useEffect","photoIdArr","length","handleFormSubmit","event","a","preventDefault","console","log","url","axios","get","then","data","results","photoData","authors","user","name","title","description","alt_description","image","urls","full","error","handleSavePhoto","photoToSave","find","Auth","loggedIn","variables","Container","Form","onSubmit","Row","Col","xs","md","Control","value","onChange","target","size","placeholder","CardColumns","Card","border","Img","src","alt","variant","Body","Title","className","username","Text","Button","disabled","some","onClick","GET_ME","Saved","pic1","pic2","pic3","pic4","pic5","pic6","pic7","pic8","pic9","SavedPhotos","useQuery","loading","removePhoto","userData","me","handleDeletePhoto","savedPhotos","SignupForm","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","addUser","handleInputChange","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","fluid","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","photosUploaded","options","scOptions","Util","withSnakeCaseKeys","CoreCloudinary","new","e","Photo","props","state","showMore","context","urlPath","custom","href","rel","width","height","crop","quality","fetchFormat","setState","Component","contextType","CloudinaryContext","AvatarBio","avatar1","PhotoList","uploadImageWithCloudinary","bind","callback","uploadOptions","tags","result","info","onPhotosUploaded","cloudinary","openUploadWidget","PhotoListContainer","connect","UploadedPhotoStatus","percent","Math","floor","progress","fileName","delete_token","deletePhoto","status","role","style","Object","keys","key","request","post","cloudName","set","send","onDeletePhoto","onDeleteUploadedPhoto","UploadedPhotoStatusContainer","PhotosUploader","disableClick","multiple","accept","position","onDrop","onPhotoSelected","path","ref","titleEl","fileInputEl","files","exact","file","field","uploadPreset","on","onPhotoUploadProgress","end","onPhotoUploaded","onUpdateUploadedPhoto","PhotosUploaderContainer","App","format","version","ceil","getTime","fetch","res","text","resources","fetchPhotos","onPhotosFetched","component","from","AppContainer","Home","Footer","CheckoutForm","handleSubmit","stripe","elements","card","getElement","CardElement","createPaymentMethod","paymentMethod","base","fontSize","color","invalid","React","InjectedCheckoutForm","stripePromise","loadStripe","Payment","cloud_name","config","upload_preset","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ApolloProvider","render","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c9d7f6d2.chunk.js","sourcesContent":["export const PHOTOS_FETCHED = 'PHOTOS_FETCHED';\r\nexport const PHOTOS_UPLOADED = 'PHOTOS_UPLOADED';\r\nexport const DELETE_UPLOADED_PHOTO = 'DELETE_UPLOADED_PHOTO';\r\nexport const UPDATE_UPLOADED_PHOTO = 'UPDATE_UPLOADED_PHOTO';\r\n","import {\r\n  PHOTOS_FETCHED,\r\n  PHOTOS_UPLOADED,\r\n  DELETE_UPLOADED_PHOTO,\r\n} from \"../utils/Constants\";\r\n\r\nconst PhotosListReducer = (photos = [], action) => {\r\n  switch (action.type) {\r\n    case PHOTOS_FETCHED:\r\n      return [...action.photos];\r\n    case PHOTOS_UPLOADED: {\r\n      return [...action.photos, ...photos];\r\n    }\r\n    case DELETE_UPLOADED_PHOTO:\r\n      return photos.filter((photo) => photo.public_id !== action.publicId);\r\n    default:\r\n      return [...photos];\r\n  }\r\n};\r\n\r\nexport default PhotosListReducer;\r\n","import {\r\n  UPDATE_UPLOADED_PHOTO,\r\n  DELETE_UPLOADED_PHOTO,\r\n} from \"../utils/Constants\";\r\n\r\nconst UploadedPhotosReducer = (uploadedPhotos = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_UPLOADED_PHOTO: {\r\n      let photoIndex = -1;\r\n      const updatedPhotos = uploadedPhotos.map((photo, index) => {\r\n        if (photo.id === action.uploadedPhoto.id) {\r\n          photoIndex = index;\r\n          return { ...photo, ...action.uploadedPhoto };\r\n        }\r\n\r\n        return photo;\r\n      });\r\n\r\n      return photoIndex !== -1\r\n        ? updatedPhotos\r\n        : [action.uploadedPhoto, ...uploadedPhotos];\r\n    }\r\n    case DELETE_UPLOADED_PHOTO: {\r\n      const index = uploadedPhotos.findIndex(\r\n        (current) => current.response.body.public_id === action.publicId\r\n      );\r\n      return [\r\n        ...uploadedPhotos.slice(0, index),\r\n        ...uploadedPhotos.slice(index + 1),\r\n      ];\r\n    }\r\n    default:\r\n      return [...uploadedPhotos];\r\n  }\r\n};\r\n\r\nexport default UploadedPhotosReducer;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","export const getSavedPhotoIds = () => {\r\n  const savedPhotoIds = localStorage.getItem('saved_photos')\r\n    ? JSON.parse(localStorage.getItem('saved_photos'))\r\n    : [];\r\n\r\n  return savedPhotoIds;\r\n};\r\n\r\nexport const savePhotoIds = (photoIdArr) => {\r\n  if (photoIdArr.length) {\r\n    localStorage.setItem('saved_photos', JSON.stringify(photoIdArr));\r\n  } else {\r\n    localStorage.removeItem('saved_photos');\r\n  }\r\n};\r\n\r\nexport const removePhotoId = (photoId) => {\r\n  const savedPhotoIds = localStorage.getItem('saved_photos')\r\n    ? JSON.parse(localStorage.getItem('saved_photos'))\r\n    : null;\r\n\r\n  if (!savedPhotoIds) {\r\n    return false;\r\n  }\r\n\r\n  const updatedSavedPhotoIds = savedPhotoIds?.filter((savedPhotoId) => savedPhotoId !== photoId);\r\n  localStorage.setItem('saved_photos', JSON.stringify(updatedSavedPhotoIds));\r\n\r\n  return true;\r\n};\r\n","import { gql } from '@apollo/client';\r\n\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\nmutation addUser($username: String!, $password: String!, $email: String!) {\r\n  addUser(username: $username, password: $password, email: $email) {\r\n    \r\n    user {\r\n      _id\r\n      username\r\n      email\r\n      photoCount\r\n      savedPhotos {\r\n        authors\r\n        photoId\r\n        image\r\n        link\r\n        title\r\n        description\r\n      }\r\n    }\r\n    token\r\n  }\r\n}\r\n`;\r\n\r\nexport const SAVE_PHOTO = gql`\r\n  mutation savePhoto($photoData: PhotoInput!) {\r\n    savePhoto(photoData: $photoData) {\r\n      _id\r\n      username\r\n      email\r\n      savedPhoto {\r\n        photoId\r\n        author\r\n        image\r\n        description\r\n        title\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const REMOVE_PHOTO = gql`\r\n  mutation removePhoto($photoId: ID!) {\r\n    removePhoto(photoId: $photoId) {\r\n      _id\r\n      username\r\n      email\r\n      savedPhotos {\r\n        photoId\r\n        authors\r\n        image\r\n        description\r\n        title\r\n        link\r\n      }\r\n    }\r\n  }\r\n`;","import React from \"react\";\r\nimport \"./resultStyles.css\";\r\n// import pic1 from \"../pages/searchimage/img1.jpg\";\r\n// import pic2 from \"../pages/searchimage/img2.jpg\";\r\n// import pic3 from \"../pages/searchimage/img3.jpg\";\r\n// import pic4 from \"../pages/searchimage/img4.jpg\";\r\n// import pic5 from \"../pages/searchimage/img5.jpg\";\r\n// import pic6 from \"../pages/searchimage/img6.jpg\";\r\n// import pic7 from \"../pages/searchimage/img7.jpg\";\r\n\r\nfunction Results() {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Photo Search</h1>\r\n      <div className=\"searchContainer\">\r\n        <input className=\"search\" type=\"text\" placeholder=\"Search..\"></input>\r\n        <button type=\"submit\">\r\n          <i class=\"fa fa-search\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"results\">\r\n        <div className=\"text\">Results</div>\r\n        {/* <div className=\"picContainer\">\r\n          <img src={pic1} />\r\n          <img src={pic2} />\r\n          <img src={pic3} />\r\n          <img src={pic4} />\r\n          <img src={pic5} />\r\n          <img src={pic6} />\r\n          <img src={pic7} />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  CardColumns,\r\n} from \"react-bootstrap\";\r\n\r\nimport Auth from \"../utils/auth\";\r\nimport { savePhotoIds, getSavedPhotoIds } from \"../utils/localStorage\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { SAVE_PHOTO } from \"../utils/mutations\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./resultStyles.css\";\r\nimport Results from \"./Results\";\r\n\r\nconst SearchPhotos = () => {\r\n  // create state for holding returned google api data\r\n  // const [result, setresult] = useState([]);\r\n  const [searchResult, setResult] = useState([]);\r\n  // create state for holding our search field data\r\n  // const [searchInput, setSearchInput] = useState('');\r\n  const [photo, setPhoto] = useState(\"\");\r\n\r\n  const [clientId, setClientID] = useState(\r\n    \"aczCYkM2vBISaUTNddlmnXpXV8_2TYD5fAzxm_23vNM\"\r\n  );\r\n\r\n  // create state to hold saved photoId values\r\n  const [savedPhotoIds, setSavedPhotoIds] = useState(getSavedPhotoIds());\r\n\r\n  const [savePhoto] = useMutation(SAVE_PHOTO);\r\n\r\n  // set up useEffect hook to save `savedphotoIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => savePhotoIds(savedPhotoIds);\r\n  });\r\n\r\n  // create method to search for photos and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!photo) {\r\n      return false;\r\n    }\r\n    console.log(photo);\r\n\r\n    try {\r\n      const url =\r\n        \"https://api.unsplash.com/search/photos?page=1&query=\" +\r\n        photo +\r\n        \"&client_id=\" +\r\n        clientId;\r\n      axios.get(url).then((response) => {\r\n        console.log(response);\r\n        setResult(response.data.results);\r\n      });\r\n\r\n      // if (!url.ok) {\r\n      //   throw new Error('something went wrong!');\r\n      // }\r\n\r\n      // const { items } = await url.json();\r\n\r\n      const photoData = searchResult.map((photo) => ({\r\n        photoId: photo.id,\r\n        authors: photo.user.name || [\"No Photographer to display\"],\r\n        title: photo.description,\r\n        description: photo.alt_description || [\"No description\"],\r\n        image: photo.urls.full || \"\",\r\n      }));\r\n\r\n      console.log(photoData);\r\n      setResult(photoData);\r\n      setPhoto(\"\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // create function to handle saving a photo to our database\r\n  const handleSavePhoto = async (photoId) => {\r\n    // find the photo in `result` state by the matching id\r\n    const photoToSave = searchResult.find((photo) => photo.photoId === photoId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const { data } = await savePhoto({\r\n        variables: { photoData: { ...photoToSave } },\r\n      });\r\n      console.log(\"data:\", data);\r\n      console.log(savedPhotoIds);\r\n      setSavedPhotoIds([...savedPhotoIds, photoToSave.photoId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>Photo Search</h1>\r\n        <Form onSubmit={handleFormSubmit}>\r\n          <Form.Row>\r\n            <Col xs={12} md={8}>\r\n              <Form.Control\r\n                name=\"photo\"\r\n                value={photo}\r\n                onChange={(event) => setPhoto(event.target.value)}\r\n                type=\"text\"\r\n                size=\"lg\"\r\n                placeholder=\"Search\"\r\n              />\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              {/* <Button type=\"submit\">Submit Search</Button> */}\r\n            </Col>\r\n          </Form.Row>\r\n        </Form>\r\n      </Container>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchResult.length\r\n            ? `Viewing ${searchResult.length} results:`\r\n            : \"Results\"}\r\n        </h2>\r\n        {/* <div className=\"resultContainer\">\r\n          <Results />\r\n        </div> */}\r\n        <CardColumns>\r\n          {searchResult.map((photo) => {\r\n            return (\r\n              <Card key={photo.id} border=\"dark\">\r\n                {photo.urls.full ? (\r\n                  <Card.Img\r\n                    src={photo.urls.full}\r\n                    alt={`The cover for ${photo.id}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{photo.description}</Card.Title>\r\n                  <p className=\"small\">Authors: {photo.user.username}</p>\r\n                  <Card.Text>{photo.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedPhotoIds?.some(\r\n                        (savedPhotoId) => savedPhotoId === photo.id\r\n                      )}\r\n                      className=\"btn-block btn-info\"\r\n                      onClick={() => handleSavePhoto(photo.id)}\r\n                    >\r\n                      {savedPhotoIds?.some(\r\n                        (savedPhotoId) => savedPhotoId === photo.id\r\n                      )\r\n                        ? \"This photo has already been saved!\"\r\n                        : \"Save this photo!\"}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchPhotos;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const GET_ME  = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            photoCount\r\n            savedPhotos {\r\n                photoId\r\n                authors\r\n                title\r\n                description\r\n                image\r\n                link\r\n            }\r\n        }\r\n    }\r\n`;","export default __webpack_public_path__ + \"static/media/img11.071baad8.jpg\";","export default __webpack_public_path__ + \"static/media/img12.5ce08668.jpg\";","export default __webpack_public_path__ + \"static/media/img13.7daf8aea.jpg\";","export default __webpack_public_path__ + \"static/media/img14.4ea2c308.jpg\";","export default __webpack_public_path__ + \"static/media/img15.28b31e31.jpg\";","export default __webpack_public_path__ + \"static/media/img16.a6461d0d.jpg\";","export default __webpack_public_path__ + \"static/media/img17.cbc77a4c.jpg\";","export default __webpack_public_path__ + \"static/media/img18.35bca809.jpg\";","export default __webpack_public_path__ + \"static/media/img19.4deb9ca5.jpg\";","import React from \"react\";\r\nimport \"./resultStyles.css\";\r\nimport pic1 from \"../pages/savedImage/img11.jpg\";\r\nimport pic2 from \"../pages/savedImage/img12.jpg\";\r\nimport pic3 from \"../pages/savedImage/img13.jpg\";\r\nimport pic4 from \"../pages/savedImage/img14.jpg\";\r\nimport pic5 from \"../pages/savedImage/img15.jpg\";\r\nimport pic6 from \"../pages/savedImage/img16.jpg\";\r\nimport pic7 from \"../pages/savedImage/img17.jpg\";\r\nimport pic8 from \"../pages/savedImage/img18.jpg\";\r\nimport pic9 from \"../pages/savedImage/img19.jpg\";\r\n\r\nfunction Saved() {\r\n  return (\r\n    <div className=\"contain\">\r\n      <div className=\"picContainer\">\r\n        <img src={pic1} />\r\n\r\n        <img src={pic2} />\r\n        <img src={pic3} />\r\n        <img src={pic4} />\r\n        <img src={pic5} />\r\n        <img src={pic6} />\r\n        <img src={pic7} />\r\n        <img src={pic8} />\r\n        <img src={pic9} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Saved;\r\n","import React from \"react\";\r\nimport { Container, CardColumns, Card, Button } from \"react-bootstrap\";\r\n\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { GET_ME } from \"../utils/queries\";\r\nimport { REMOVE_PHOTO } from \"../utils/mutations\";\r\nimport Auth from \"../utils/auth\";\r\nimport { removePhotoId } from \"../utils/localStorage\";\r\nimport Saved from \"../../src/pages/Saved\";\r\nimport \"./savedStyles.css\";\r\n\r\nconst SavedPhotos = () => {\r\n  const { loading, data } = useQuery(GET_ME);\r\n  const [removePhoto] = useMutation(REMOVE_PHOTO);\r\n\r\n  const userData = data?.me || [];\r\n\r\n  // use this to determine if `useEffect()` hook needs to run again\r\n  // const userDataLength = Object.keys(userData).length;\r\n\r\n  // create function that accepts the photo's mongo _id value as param and deletes the photo from the database\r\n  const handleDeletePhoto = async (photoId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n    console.log(photoId);\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await removePhoto({\r\n        variables: { photoId },\r\n      });\r\n\r\n      // upon success, remove photo's id from localStorage\r\n      removePhotoId(photoId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>{userData.username}'s saved photos</h1>\r\n      </div>\r\n\r\n      <Container>\r\n        {/* <h2>\r\n          {userData.savedPhotos?.length\r\n            ? `Viewing ${userData.savedPhotos.length} saved ${\r\n                userData.savedPhotos.length === 1 ? \"photo\" : \"photos\"\r\n              }:`\r\n            : \"You have no saved photos!\"}\r\n        </h2> */}\r\n        <Saved />\r\n        <CardColumns>\r\n          {userData.savedPhotos?.map((photo) => {\r\n            return (\r\n              <Card key={photo.photoId} border=\"dark\">\r\n                {photo.image ? (\r\n                  <Card.Img\r\n                    src={photo.image}\r\n                    alt={`The cover for ${photo.title}`}\r\n                    variant=\"top\"\r\n                  />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{photo.title}</Card.Title>\r\n                  <p className=\"small\">Authors: {photo.authors}</p>\r\n                  <Card.Text>{photo.description}</Card.Text>\r\n                  <Button\r\n                    className=\"btn-block btn-danger\"\r\n                    onClick={() => handleDeletePhoto(photo.photoId)}\r\n                  >\r\n                    Delete this photo!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedPhotos;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n  // set initial form state\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setShowAlert(true);\r\n    } else {\r\n      setShowAlert(false);\r\n    }\r\n  }, [error]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await addUser({\r\n        variables: { ...userFormData },\r\n      });\r\n      console.log(data);\r\n      Auth.login(data.addUser.token)\r\n     } catch (err) {\r\n        console.error(err);\r\n      }\r\n\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","// see SignupForm.js for comments\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [login, {error}] = useMutation(LOGIN_USER)\r\n\r\n  useEffect (()=> {\r\n    if (error){\r\n      setShowAlert(true);\r\n    } else {\r\n      setShowAlert(false);}\r\n    }, [error])\r\n  \r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...userFormData },\r\n      });\r\n\r\n      console.log(data);\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your login credentials!\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, Container, Modal, Tab } from \"react-bootstrap\";\r\nimport SignUpForm from \"./SignupForm\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nimport Auth from \"../utils/auth\";\r\n\r\nimport \"./navbar.css\";\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            Home\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"navbar\" />\r\n          <Navbar.Collapse id=\"navbar\">\r\n            <Nav className=\"ml-auto\">\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to=\"/search\">\r\n                    Search\r\n                  </Nav.Link>\r\n                  <Nav.Link as={Link} to=\"/saved\">\r\n                    Favorites\r\n                  </Nav.Link>\r\n                  <Nav.Link as={Link} to=\"/profile\">\r\n                    Profile\r\n                  </Nav.Link>\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>\r\n                  Login/Sign Up\r\n                </Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size=\"lg\"\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby=\"signup-modal\"\r\n      >\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey=\"login\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"signup-modal\">\r\n              <Nav variant=\"pills\">\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"login\">Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"signup\">Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"login\">\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"signup\">\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","export default {\r\n  cloud_name: \"proj3\",\r\n  upload_preset: \"default\",\r\n};\r\n","import {\r\n  PHOTOS_FETCHED,\r\n  PHOTOS_UPLOADED,\r\n  DELETE_UPLOADED_PHOTO,\r\n  UPDATE_UPLOADED_PHOTO,\r\n} from \"../utils/Constants\";\r\n\r\nexport const photosFetched = (photos) => ({\r\n  type: PHOTOS_FETCHED,\r\n  photos: photos,\r\n});\r\n\r\nexport const photosUploaded = (photos) => ({\r\n  type: PHOTOS_UPLOADED,\r\n  photos: photos,\r\n});\r\n\r\nexport const updateUploadedPhoto = (uploadedPhoto) => ({\r\n  type: UPDATE_UPLOADED_PHOTO,\r\n  uploadedPhoto: uploadedPhoto,\r\n});\r\n\r\nexport const deleteUploadedPhoto = (publicId) => ({\r\n  type: DELETE_UPLOADED_PHOTO,\r\n  publicId: publicId,\r\n});\r\n","import { Cloudinary as CoreCloudinary, Util } from \"cloudinary-core\";\r\n\r\nexport const url = (publicId, options) => {\r\n  try {\r\n    const scOptions = Util.withSnakeCaseKeys(options);\r\n    const cl = CoreCloudinary.new();\r\n    return cl.url(publicId, scOptions);\r\n  } catch (e) {\r\n    console.error(e);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const openUploadWidget = (options, callback) => {\r\n  window.cloudinary.openUploadWidget(options, callback);\r\n};\r\n\r\nexport const fetchPhotos = (cloudName) => {\r\n  // instead of maintaining the list of images, we rely on the 'myphotoalbum' tag\r\n  // and simply retrieve a list of all images with that tag.\r\n  // the version property is used for cache bust (lists are cached by the CDN for 1 minute)\r\n  // *************************************************************************\r\n  // Note that this practice is DISCOURAGED in production code and is here\r\n  // for demonstration purposes only\r\n  // *************************************************************************\r\n  const options = {\r\n    cloudName: cloudName,\r\n    format: \"json\",\r\n    type: \"list\",\r\n    version: Math.ceil(new Date().getTime() / 1000),\r\n  };\r\n\r\n  const urlPath = url(\"myphotoalbum\", options);\r\n\r\n  return fetch(urlPath)\r\n    .then((res) => res.text())\r\n    .then((text) => (text ? JSON.parse(text).resources : []));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Image, Transformation } from \"cloudinary-react\";\r\nimport { url } from \"../../utils/CloudinaryService\";\r\nimport { CloudinaryContext } from \"cloudinary-react\";\r\n// import PhotoThumbnails from \"./PhotoThumbnails\";\r\nimport \"./styles.css\";\r\nclass Photo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { showMore: false };\r\n  }\r\n\r\n  render() {\r\n    const options = { ...this.context, ...this.props };\r\n    const urlPath = url(options.publicId, options);\r\n\r\n    return (\r\n      <div className=\"photo\">\r\n        {this.props.context && <h2>{this.props.context.custom.photo}</h2>}\r\n        <a href={urlPath} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <Image\r\n            publicId={this.props.publicId}\r\n            className=\"thumbnail inline\"\r\n            width=\"150\"\r\n            height=\"150\"\r\n            crop=\"fit\"\r\n            quality=\"80\"\r\n          >\r\n            <Transformation quality=\"auto\" fetchFormat=\"auto\" />\r\n          </Image>\r\n        </a>\r\n        <div id=\"buttons\">\r\n          <h3>Remark</h3>\r\n          <h3>Edit</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  showMore() {\r\n    this.setState({ showMore: true });\r\n  }\r\n\r\n  showLess() {\r\n    this.setState({ showMore: false });\r\n  }\r\n\r\n  static contextType = CloudinaryContext.contextType;\r\n}\r\n\r\nPhoto.propTypes = {\r\n  context: PropTypes.object,\r\n  publicId: PropTypes.string,\r\n};\r\n\r\nexport default Photo;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { useQuery, useMutation } from \"@apollo/client\";\r\nimport { GET_ME } from \"../../utils/queries\";\r\nimport \"./styles.css\";\r\n\r\nconst Header = () => {\r\n  const { data } = useQuery(GET_ME);\r\n  const userData = data?.me || [];\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"header\">\r\n          <h1>{userData.username}'s Gallery</h1>\r\n          <div id=\"userlog\"></div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/avatar2.fee3ecd8.png\";","import React from \"react\";\r\nimport avatar1 from \"./avatar2.png\";\r\n\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { GET_ME } from \"../../utils/queries\";\r\n\r\nconst AvatarBio = () => {\r\n  const { data } = useQuery(GET_ME);\r\n  const userData = data?.me || [];\r\n\r\n  return (\r\n    <div id=\"bio\">\r\n      <div id=\"avatar\">\r\n        <img src={avatar1} alt=\"avatar\" />\r\n      </div>\r\n      <div id=\"text\">\r\n        <h2>Bio</h2>\r\n        <h3>\r\n          Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil\r\n          impedit quo minus id quod maxime placeat facere possimus, omnis\r\n          voluptas assumenda est, omnis dolor repellendus.\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AvatarBio;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { openUploadWidget } from \"../../utils/CloudinaryService\";\r\nimport { photosUploaded } from \"../../actions\";\r\nimport Photo from \"./Photo\";\r\n// import Userdashboard from \"./Userdashboard\";\r\nimport Header from \"./Header\";\r\nimport { CloudinaryContext } from \"cloudinary-react\";\r\nimport AvatarBio from \"./AvatarBio\";\r\nimport \"./styles.css\";\r\n\r\nclass PhotoList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        <Header />\r\n        <div className=\"container\">\r\n          <div className=\"photoList\">\r\n            <div id=\"Userdashboard\">\r\n              <div className=\"actions\">\r\n                <button\r\n                  className=\"upload_link\"\r\n                  onClick={this.uploadImageWithCloudinary.bind(this)}\r\n                >\r\n                  <h2>Upload</h2>\r\n                </button>\r\n              </div>\r\n              {/* <Userdashboard /> */}\r\n            </div>\r\n            <div className=\"photos\">\r\n              {this.props.photos.length === 0 && (\r\n                <p>No photos were added yet.</p>\r\n              )}\r\n              {this.props.photos.map((photo) => {\r\n                return (\r\n                  <Photo key={photo.public_id} publicId={photo.public_id} />\r\n                );\r\n              })}\r\n            </div>\r\n            <AvatarBio />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  uploadImageWithCloudinary() {\r\n    const uploadOptions = { tags: [\"myphotoalbum\"], ...this.context };\r\n    console.log(uploadOptions);\r\n\r\n    openUploadWidget(uploadOptions, (error, result) => {\r\n      if (!error) {\r\n        const { event, info } = result;\r\n        if (event === \"success\") {\r\n          this.props.onPhotosUploaded([info]);\r\n        }\r\n      } else {\r\n        console.log(error);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nPhotoList.contextType = CloudinaryContext.contextType;\r\n\r\nPhotoList.propTypes = {\r\n  photos: PropTypes.array,\r\n  onPhotosUploaded: PropTypes.func,\r\n};\r\n\r\nconst PhotoListContainer = connect((state) => ({ photos: state.photos }), {\r\n  onPhotosUploaded: photosUploaded,\r\n})(PhotoList);\r\n\r\nexport default PhotoListContainer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport request from \"superagent\";\r\nimport { deleteUploadedPhoto } from \"../../actions\";\r\nimport { CloudinaryContext } from \"cloudinary-react\";\r\n\r\nclass UploadedPhotoStatus extends Component {\r\n  render() {\r\n    const uploadedPhoto = this.props.uploadedPhoto;\r\n    const response = uploadedPhoto.response;\r\n    const data = response && response.body;\r\n    const percent = Math.floor(uploadedPhoto.progress.percent);\r\n    return (\r\n      <div>\r\n        <h3>{uploadedPhoto.fileName}</h3>\r\n        {data && data.delete_token && (\r\n          <button\r\n            className=\"delete-image\"\r\n            onClick={this.deletePhoto.bind(this)}\r\n          >\r\n            Delete image\r\n          </button>\r\n        )}\r\n        <div className=\"status\">\r\n          {!response && <div>Uploading... {percent}%</div>}\r\n          {!response && <div>In progress</div>}\r\n          {response && (\r\n            <div className=\"status-code\">\r\n              Upload completed with status code {response.status}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"progress-bar\">\r\n          <div\r\n            className=\"progress\"\r\n            role=\"progressbar\"\r\n            style={{ width: percent + \"%\" }}\r\n          />\r\n        </div>\r\n        {data && (\r\n          <div className=\"info\">\r\n            <table>\r\n              <tbody>\r\n                {Object.keys(data).map((key) => {\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>{key}</td>\r\n                      <td>{JSON.stringify(data[key])}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  deletePhoto() {\r\n    request\r\n      .post(\r\n        `https://api.cloudinary.com/v1_1/${this.context.cloudName}/delete_by_token`\r\n      )\r\n      .set(\"Content-Type\", \"application/json\")\r\n      .set(\"X-Requested-With\", \"XMLHttpRequest\")\r\n      .send({\r\n        token: this.props.uploadedPhoto.response.body.delete_token,\r\n      })\r\n      .then(this.onDeletePhoto.bind(this));\r\n  }\r\n\r\n  onDeletePhoto() {\r\n    this.props.onDeleteUploadedPhoto(\r\n      this.props.uploadedPhoto.response.body.public_id\r\n    );\r\n  }\r\n\r\n  static contextType = CloudinaryContext.contextType;\r\n}\r\n\r\nUploadedPhotoStatus.propTypes = {\r\n  uploadedPhoto: PropTypes.object,\r\n  onDeleteUploadedPhoto: PropTypes.func,\r\n};\r\n\r\nconst UploadedPhotoStatusContainer = connect((state) => state, {\r\n  onDeleteUploadedPhoto: deleteUploadedPhoto,\r\n})(UploadedPhotoStatus);\r\n\r\nexport default UploadedPhotoStatusContainer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport request from \"superagent\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { photosUploaded, updateUploadedPhoto } from \"../../actions\";\r\nimport UploadedPhotoStatusContainer from \"./UploadedPhotosStatus\";\r\nimport { CloudinaryContext } from \"cloudinary-react\";\r\n\r\nclass PhotosUploader extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = { uploadedPhotos: [] };\r\n    this.photoId = 1;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Dropzone\r\n          id=\"direct-upload-dropzone\"\r\n          disableClick={true}\r\n          multiple={false}\r\n          accept=\"image/*\"\r\n          style={{ position: \"relative\" }}\r\n          onDrop={this.onPhotoSelected.bind(this)}\r\n        >\r\n          <div id=\"direct_upload\">\r\n            <h1>New Photo</h1>\r\n            <h2>Direct upload from the browser with React File Upload</h2>\r\n            <p>\r\n              You can also drag and drop an image file into the dashed area.\r\n            </p>\r\n            <form>\r\n              <div className=\"form_line\">\r\n                <label path=\"title\">Title:</label>\r\n                <div className=\"form_controls\">\r\n                  <input\r\n                    type=\"text\"\r\n                    ref={(titleEl) => (this.titleEl = titleEl)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Title\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form_line\">\r\n                <label>Image:</label>\r\n                <div className=\"form_controls\">\r\n                  <div className=\"upload_button_holder\">\r\n                    <label className=\"upload_button\" htmlFor=\"fileupload\">\r\n                      Upload\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"fileupload\"\r\n                      accept=\"image/*\"\r\n                      multiple=\"multiple\"\r\n                      ref={(fileInputEl) => (this.fileInputEl = fileInputEl)}\r\n                      onChange={() =>\r\n                        this.onPhotoSelected(this.fileInputEl.files)\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </form>\r\n            <h2>Status</h2>\r\n          </div>\r\n          {this.props.uploadedPhotos.map((uploadedPhoto, index) => {\r\n            return (\r\n              <UploadedPhotoStatusContainer\r\n                key={index}\r\n                uploadedPhoto={uploadedPhoto}\r\n              />\r\n            );\r\n          })}\r\n        </Dropzone>\r\n\r\n        <NavLink className=\"back_link\" exact to=\"/photos\">\r\n          Back to list\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  onPhotoSelected(files) {\r\n    const url = `https://api.cloudinary.com/v1_1/${this.context.cloudName}/upload`;\r\n    const title = this.titleEl.value;\r\n\r\n    for (let file of files) {\r\n      const photoId = this.photoId++;\r\n      const fileName = file.name;\r\n      request\r\n        .post(url)\r\n        .field(\"upload_preset\", this.context.uploadPreset)\r\n        .field(\"file\", file)\r\n        .field(\"multiple\", true)\r\n        .field(\"tags\", title ? `myphotoalbum,${title}` : \"myphotoalbum\")\r\n        .field(\"context\", title ? `photo=${title}` : \"\")\r\n        .on(\"progress\", (progress) =>\r\n          this.onPhotoUploadProgress(photoId, file.name, progress)\r\n        )\r\n        .end((error, response) => {\r\n          this.onPhotoUploaded(photoId, fileName, response);\r\n        });\r\n    }\r\n  }\r\n\r\n  onPhotoUploadProgress(id, fileName, progress) {\r\n    this.props.onUpdateUploadedPhoto({\r\n      id: id,\r\n      fileName: fileName,\r\n      progress: progress,\r\n    });\r\n  }\r\n\r\n  onPhotoUploaded(id, fileName, response) {\r\n    this.props.onUpdateUploadedPhoto({\r\n      id: id,\r\n      fileName: fileName,\r\n      response: response,\r\n    });\r\n\r\n    this.props.onPhotosUploaded([response.body]);\r\n  }\r\n\r\n  static contextType = CloudinaryContext.contextType;\r\n}\r\n\r\nPhotosUploader.propTypes = {\r\n  uploadedPhotos: PropTypes.array,\r\n  onUpdateUploadedPhoto: PropTypes.func,\r\n  onPhotosUploaded: PropTypes.func,\r\n};\r\n\r\nconst PhotosUploaderContainer = connect((state) => state, {\r\n  onUpdateUploadedPhoto: updateUploadedPhoto,\r\n  onPhotosUploaded: photosUploaded,\r\n})(PhotosUploader);\r\n\r\nexport default PhotosUploaderContainer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CloudinaryContext } from \"cloudinary-react\";\r\nimport { photosFetched } from \"../../actions\";\r\nimport PhotoListContainer from \"./PhotoList\";\r\nimport PhotosUploaderContainer from \"./PhotosUploader\";\r\nimport { fetchPhotos } from \"../../utils/CloudinaryService\";\r\nimport \"./styles.css\";\r\nimport \"../../App.css\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    fetchPhotos(this.props.cloudName).then(this.props.onPhotosFetched);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <CloudinaryContext\r\n        cloudName={this.props.cloudName}\r\n        uploadPreset={this.props.uploadPreset}\r\n      >\r\n        <BrowserRouter>\r\n          <Switch className=\"router\">\r\n            <Route exact path=\"/photo\" component={PhotoListContainer} />\r\n            <Route\r\n              exact\r\n              path=\"/photos/new\"\r\n              component={PhotosUploaderContainer}\r\n            />\r\n            <Redirect from=\"/\" to=\"/photo\" />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </CloudinaryContext>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  cloudName: PropTypes.string,\r\n  uploadPreset: PropTypes.string,\r\n  onPhotosFetched: PropTypes.func,\r\n};\r\n\r\nconst AppContainer = connect(null, { onPhotosFetched: photosFetched })(App);\r\n\r\nexport default AppContainer;\r\n","export default __webpack_public_path__ + \"static/media/street.b2f66f92.jpg\";","export default __webpack_public_path__ + \"static/media/crowd.2266fb09.jpg\";","export default __webpack_public_path__ + \"static/media/field.b03ff97e.jpg\";","export default __webpack_public_path__ + \"static/media/donkey.dffc9813.jpg\";","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport pic1 from \"./crowd.jpg\";\r\nimport pic2 from \"./field.jpg\";\r\nimport pic3 from \"./donkey.jpg\";\r\nimport pic4 from \"./street.jpg\";\r\n\r\nconst Home = () => {\r\n  //   const album = [pic1, pic2, pic3, pic4];\r\n  //   const contain = document.getElementById(\"frame\");\r\n\r\n  // function getRandomImage() {\r\n  //   var num = Math.floor(Math.random() * album.length);\r\n  //   var img = album[num];\r\n  //   contain.innerHTML = '<img src=\"' + img + '\">';\r\n  // }\r\n  // getRandomImage();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        Photo Drop!\r\n        <span>share, comment, inspire</span>\r\n      </div>\r\n      <div id=\"frame\">\r\n        <img src={pic4} />\r\n      </div>\r\n    </div>\r\n    // <div id=\"main\">\r\n    //   <div class=\"row text-center\" id=\"main-row\">\r\n    //     <img\r\n    //       src=\"https://images.unsplash.com/photo-1471584363844-b3909b58d6f7?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=3648&q=80\"\r\n    //       class=\"img-fluid\"\r\n    //       id=\"random-pic\"\r\n    //       alt=\"...\"\r\n    //     ></img>\r\n\r\n    //     <div class=\"jumbotron\">\r\n    //       <h1 class=\"display-4\" id=\"main-header\">\r\n    //         Photo Drop!{\" \"}\r\n    //       </h1>\r\n    //       <p class=\"lead\" id=\"intro\">\r\n    //         Sign In in order to Search and Upload imanges\r\n    //       </p>\r\n    //       <p class=\"lead\" id=\"intro-sub\">\r\n    //         <a class=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\r\n    //           Maybe this can be another login button or maybe\r\n    //         </a>\r\n    //       </p>\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Footer = () => (\r\n    <div className=\"footer\">\r\n        <p>Help make this page better!</p>\r\n       <button><Link to={\"/Payment\"}>Donate Now!</Link></button>\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {loadStripe} from '@stripe/stripe-js';\r\nimport {CardElement, Elements, ElementsConsumer} from '@stripe/react-stripe-js';\r\n\r\n\r\nclass CheckoutForm extends React.Component {\r\n  handleSubmit = async (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    const {stripe, elements} = this.props;\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not loaded yet. Make sure to disable\r\n      // form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n\r\n    const card = elements.getElement(CardElement);\r\n\r\n    if (card == null) {\r\n      return;\r\n    }\r\n\r\n    const {error, paymentMethod} = await stripe.createPaymentMethod({\r\n      type: 'card',\r\n      card,\r\n    });\r\n\r\n    if (error) {\r\n      console.log('[error]', error);\r\n    } else {\r\n      console.log('[PaymentMethod]', paymentMethod);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {stripe} = this.props;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <CardElement\r\n          options={{\r\n            style: {\r\n              base: {\r\n                fontSize: '16px',\r\n                color: '#424770',\r\n                '::placeholder': {\r\n                  color: '#aab7c4',\r\n                },\r\n              },\r\n              invalid: {\r\n                color: '#9e2146',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n        <button type=\"submit\" disabled={!stripe}>\r\n          Pay\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n// payment is disabled so that people can't actually pay us //\r\n\r\nconst InjectedCheckoutForm = () => {\r\n  return (\r\n    <ElementsConsumer>\r\n      {({elements, stripe}) => (\r\n        <CheckoutForm elements={elements} stripe={stripe} />\r\n      )}\r\n    </ElementsConsumer>\r\n  );\r\n};\r\n\r\n\r\nconst stripePromise = loadStripe('pk_test_51JGER2DX5T2VcWxZlaxbjVHhFvlC9PqhbMTPBzIJ1bIMM1SAbGP3776GHa7FuJMpNO7r1NRK0yjtX6KgJ5Yvx7Jj00bxolZjQd');\r\n\r\nconst Payment = () => {\r\n  return (\r\n    <Elements stripe={stripePromise}>\r\n      <InjectedCheckoutForm />\r\n    </Elements>\r\n  );\r\n};\r\n\r\nexport default Payment;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, createHttpLink, InMemoryCache } from '@apollo/client';\r\nimport SearchPhotos from './pages/SearchPhotos';\r\nimport SavedPhotos from './pages/SavedPhotos';\r\nimport Navbar from './components/Navbar';\r\nimport {setContext} from '@apollo/client/link/context'\r\n\r\n\r\nimport config from \"./config/config\";\r\n\r\nimport React  from \"react\";\r\nimport Profile from \"../src/pages/profile/profile.js\";\r\nimport Home from \"../src/pages/home/home\";\r\nimport Footer from './components/footer';\r\nimport Payment from './components/Payment'\r\nimport \"./App.css\";\r\n\r\n\r\n\r\n\r\n\r\nconst { cloud_name, upload_preset } = config;\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\"\r\n});\r\n\r\nconst authLink = setContext((_, {headers}) => {\r\n  const token = localStorage.getItem(\"id_token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : ''\r\n    }\r\n  }\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconsole.log(client)\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route exact path='/search' component={SearchPhotos} />\r\n            <Route exact path='/saved' component={SavedPhotos} />\r\n            <Route exact path ='/profile'> <Profile cloudName={cloud_name} uploadPreset={upload_preset} />\r\n            </Route>\r\n            <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\r\n          </Switch>\r\n          <Footer/>\r\n          <Switch>\r\n            <Route exact path ='/Payment' component={Payment} />\r\n\r\n    </Switch>\r\n        </>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;","// import React from \"react\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport PhotosListReducer from \"./reducers/PhotosListReducer\";\r\nimport UploadedPhotosReducer from \"./reducers/UploadedPhotosReducer\";\r\nimport APP from './App'\r\n\r\nconst rootReducer = combineReducers({\r\n  photos: PhotosListReducer,\r\n  uploadedPhotos: UploadedPhotosReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <APP/>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}